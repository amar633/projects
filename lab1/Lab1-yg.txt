Yasmine Goudjil
CSUN ID : xyz



Here are my deliverables for Lab 1:
I- A program named FileCopy that copies the contents of one file to a destination file. 
   This program works for both options command line and prompting user for input and output files. The command line is 
   ./fileCopy.out  [<source file>] [<destination file>]
   If user fails to provide either the source file or the destination file or both. he is prompted to enter them to 
   perform the copy. 
   After checking that the source file can be opened in reading and the destination file in writing the files are 
   opened and the copy can start. Upon completion of the copy both files are closed and resources released to the system.
   To complete the process I use system calls as taught in class : open, read, write, and close. I used the man pages 
   to see what includes need to be included in the program. The test was performed using an input text file copied  from 
   the internet  and called Sindbad-The-Sailor.txt. it is copied to a file called sts.txt. I both provided the two file names
   using command line and then the command without parameters and noticed that the program indeed prompted me for the two entries.
   
   1- First option 
        ./fileCopy.out Sindbad-The-Sailor.txt sts.txt 
   2- Second option
         ./fileCopy.out Sindbad.txt
   3- Third option 
        ./fileCopy.out
  The compilation process was done using the command line 
   $ gcc -o fileCopy.out fileCopy.c
   
II- System Calls using strace 

The command issued was : 
    $ strace -o strace-yg.txt ./fileCopy.out Sindbad-The-Sailor.txt sts.txt
    
 the result are copy to a file called strace-yg.txt lthat I am providing with the deliverables. 
 
 
 execve("./a.out", ["./a.out", "Sindbad-The-Sailor.txt", "sts.txt"], 0x7ffec5f48f30 /* 62 vars */) = 0
brk(NULL)                               = 0x561eeecaa000
arch_prctl(0x3001 /* ARCH_??? */, 0x7ffcea853c40) = -1 EINVAL (Invalid argument)
access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)

fstat(3, {st_mode=S_IFREG|0644, st_size=66669, ...}) = 0
mmap(NULL, 66669, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fb917bef000
close(3)                                = 0

read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\360q\2\0\0\0\0\0"..., 832) = 832
pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0"..., 784, 64) = 784
pread64(3, "\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0", 32, 848) = 32
pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0cBR\340\305\370\2609W\242\345)q\235A\1"..., 68, 880) = 68
fstat(3, {st_mode=S_IFREG|0755, st_size=2029224, ...}) = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fb917bed000
pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0"..., 784, 64) = 784
pread64(3, "\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0", 32, 848) = 32
pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0cBR\340\305\370\2609W\242\345)q\235A\1"..., 68, 880) = 68
mmap(NULL, 2036952, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fb9179fb000
mprotect(0x7fb917a20000, 1847296, PROT_NONE) = 0
mmap(0x7fb917a20000, 1540096, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x25000) = 0x7fb917a20000
mmap(0x7fb917b98000, 303104, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19d000) = 0x7fb917b98000
mmap(0x7fb917be3000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1e7000) = 0x7fb917be3000
mmap(0x7fb917be9000, 13528, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fb917be9000
close(3)                                = 0
arch_prctl(ARCH_SET_FS, 0x7fb917bee540) = 0
mprotect(0x7fb917be3000, 12288, PROT_READ) = 0
mprotect(0x561eedaf2000, 4096, PROT_READ) = 0
mprotect(0x7fb917c2d000, 4096, PROT_READ) = 0
munmap(0x7fb917bef000, 66669)           = 0
fstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0), ...}) = 0
brk(NULL)                               = 0x561eeecaa000
brk(0x561eeeccb000)                     = 0x561eeeccb000
write(1, "file copied from argv[1] is Sind"..., 51) = 51
write(1, "\n", 1)                       = 1
write(1, "file copied from argv[2] is sts."..., 36) = 36

close(3)                                = 0
close(4)                                = 0
write(1, "file Sindbad-The-Sailor.txt copi"..., 51) = 51
exit_group(0)                           = ?
+++ exited with 0 +++

III- Answers to questions:
  Carefully examining the file strace-yg.txt. I am able to provide answer to the following questions: 
     What system call or calls correspond to opening the source and destination files?
     open system call as it appears twice for both files  in strace-yg.txt
        openat(AT_FDCWD, "Sindbad-The-Sailor.txt", O_RDONLY) = 3
        openat(AT_FDCWD, "sts.txt", O_WRONLY|O_CREAT|O_TRUNC, 0600) = 4
        
    What system call or calls correspond to reading the source file and writing the destination file?
    read system call as it appear several times in strace-yg.txt
        read(3, "                  THE SEVEN VOYA"..., 10000) = 10000
        write(4, "                  THE SEVEN VOYA"..., 10000) = 10000
        read(3, "ay, he hurried back to the sailo"..., 10000) = 10000
        write(4, "ay, he hurried back to the sailo"..., 10000) = 10000
        read(3, "end,' I consoled him, 'don't tor"..., 10000) = 10000
        write(4, "end,' I consoled him, 'don't tor"..., 10000) = 10000                  
        read(3, "r\ntimes the amount I had lost. T"..., 10000) = 10000
        write(4, "r\ntimes the amount I had lost. T"..., 10000) = 10000
        read(3, " of my becoming \nthe wife of a w"..., 10000) = 792
    
     What system call or calls correspond to closing the source and destination files? 
     close system call as it appears twice for both files in strace-yg.txt
           close(3)                               = 0
           close(4)                               = 0